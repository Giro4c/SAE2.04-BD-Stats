-- Partie 2 : Interrogation et Mise à jour de la BD IMMO

-- Q1 :

SELECT CATEGORIE, COUNT(*)
FROM BIEN
GROUP BY CATEGORIE;

SELECT TYPE, COUNT(*)
FROM BIEN
GROUP BY TYPE;

-- Q2 :

SELECT IDE, DESIGNATION
FROM ESPACE
CONNECT BY PRIOR IDE = IDERATTACH;

-- Q3 :

-- Formulation avec opérateurs ensemblistes
SELECT *
FROM PROPRIO
MINUS
SELECT *
FROM PROPRIO
WHERE IDP IN (
    SELECT IDP
    FROM BIEN
    WHERE VILLE='MARSEILLE');
    
-- Formulation avec jointure externe
SELECT PROPRIO.IDP, NOM, PRENOM
FROM PROPRIO
LEFT OUTER JOIN BIEN
ON PROPRIO.IDP = BIEN.IDP
AND BIEN.VILLE = 'MARSEILLE'
WHERE IDEBIEN IS NULL;

-- Q4 :

SELECT VILLE, COUNT(*)
FROM BIEN
GROUP BY VILLE
HAVING COUNT(*) <= 10;

-- Q5 :

SELECT *
FROM (
    SELECT IDEBIEN, CATEGORIE, TYPE, PRIX, (PRIX - MIN_PRIX_BIEN) ECART_AVEC_MIN_BIEN
    FROM BIEN, (
        SELECT MIN(PRIX) MIN_PRIX_BIEN
        FROM BIEN)
    WHERE PRIX > MIN_PRIX_BIEN
    UNION
    SELECT IDEBIEN, CATEGORIE, TYPE, PRIX, (PRIX - MIN_PRIX_BIEN) ECART_AVEC_MIN_BIEN
    FROM BIEN, (
        SELECT MIN(PRIX) MIN_PRIX_BIEN
        FROM BIEN)
    WHERE PRIX <= MIN_PRIX_BIEN)
ORDER BY ECART_AVEC_MIN_BIEN ASC;

-- Q6 :

SELECT IDEBIEN, CATEGORIE, TYPE, PRIX, (PRIX - MIN_PRIX_CAT) ECART_AVEC_MIN_BIEN
FROM BIEN, (
    SELECT CATEGORIE, MIN(PRIX) MIN_PRIX_CAT
    FROM BIEN
    GROUP BY CATEGORIE) MIN_CAT
WHERE BIEN.CATEGORIE = MIN_CAT.CATEGORIE
AND PRIX > MIN_PRIX_CAT
UNION
SELECT IDEBIEN, CATEGORIE, TYPE, PRIX, (PRIX - MIN_PRIX_CAT) ECART_AVEC_MIN_BIEN
FROM BIEN, (
    SELECT CATEGORIE, MIN(PRIX) MIN_PRIX_CAT
    FROM BIEN
    GROUP BY CATEGORIE) MIN_CAT
WHERE BIEN.CATEGORIE = MIN_CAT.CATEGORIE
AND PRIX <= MIN_PRIX_CAT;

-- Q7 :

SELECT BIEN.IDP, NOM, PRENOM, COUNT(IDEBIEN)
FROM BIEN
JOIN PROPRIO
ON BIEN.IDP = PROPRIO.IDP
AND PROPRIO.IDP IN (
    SELECT IDP
    FROM BIEN
    WHERE TYPE='STUDIO'
    GROUP BY IDP
    HAVING COUNT(*) >= 2)
GROUP BY BIEN.IDP, NOM, PRENOM;

-- Q8 :

SELECT IDP, NOM, PRENOM
FROM PROPRIO P
RIGHT OUTER JOIN BIEN B
ON P.IDP=B.IDP
AND B.CATEGORIE IN (
    SELECT CATEGORIE
    FROM BIEN
    WHERE BIEN.IDP = P.IDP)
WHERE IDEBIEN IS NULL;








-- Q11 :

CREATE VIEW MIN_PRIX_CATEGORIE AS
SELECT CATEGORIE, MIN(PRIX) MIN_PRIX
FROM BIEN
GROUP BY CATEGORIE;

SELECT IDEBIEN, CATEGORIE, TYPE, PRIX, (PRIX - MIN_PRIX) ECART_AVEC_MIN_BIEN
FROM BIEN, MIN_PRIX_CATEGORIE
WHERE BIEN.CATEGORIE = MIN_PRIX_CATEGORIE.CATEGORIE
AND PRIX > MIN_PRIX
UNION
SELECT IDEBIEN, CATEGORIE, TYPE, PRIX, (PRIX - MIN_PRIX) ECART_AVEC_MIN_BIEN
FROM BIEN, MIN_PRIX_CATEGORIE
WHERE BIEN.CATEGORIE = MIN_PRIX_CATEGORIE.CATEGORIE
AND PRIX <= MIN_PRIX;

